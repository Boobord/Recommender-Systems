import pandas as pd
import numpy as np

#pd.set_option('display.max_rows', None)
#pd.set_option('display.max_columns', None)

#Load the dataset into a pandas dataframe
df = pd.read_csv('movies_metadata.csv')
#Display the first five movies in the dataframe
df.head(100)

#Calculate the number of votes garnered by the 80th percentile movie
m = df['vote_count'].quantile(0.80)

#Only consider movies longer than 45 minutes and shorter than 300 minutes
q_movies = df[(df['runtime'] >= 45) & (df['runtime'] <= 300)]
#Only consider movies that have garnered more than m votes
q_movies = q_movies[q_movies['vote_count'] >= m]
#Inspect the number of movies that made the cut
q_movies.shape
q_movies.head(10)

# Calculate C
C = df['vote_average'].mean()

# Function to compute the IMDB weighted rating for each movie
def weighted_rating(x, m=m, C=C):
    v = x['vote_count']
    R = x['vote_average']
    
# Compute the weighted score
    return (v/(v+m) * R) + (m/(m+v) * C)
 
# Compute the score using the weighted_rating function defined above
q_movies['score'] = q_movies.apply(weighted_rating, axis=1)
q_movies['score']

#Sort movies in descending order of their scores
q_movies = q_movies.sort_values('score', ascending=False)

#Print the top 25 movies
q_movies[['title', 'vote_count', 'vote_average', 'score', 'runtime']].head(25)










